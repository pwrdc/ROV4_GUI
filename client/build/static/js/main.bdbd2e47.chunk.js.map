{"version":3,"sources":["components/Header.js","components/Module.js","components/Camera.js","components/Terminal.js","index.js"],"names":["Header","className","React","Component","Module","this","props","title","content","Camera","state","img","min","max","Math","floor","random","width","height","rgbdata","i","row","j","push","getRandomRGBValue","rgbarray","ctx","refs","canvas","getContext","length","fillStyle","fillRect","setInterval","renderRandomRGBImg","getRandomRGBImgArray","data","src","setState","url","fetch","then","response","text","renderImg","animateRandomRGBImg","io","openSocket","on","console","log","send","onClick","handleClick","alt","ref","Terminal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdbd2e47.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"box Header\">\r\n        <h3 className=\"box__title Header__title\">GUI_ROV4</h3>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Module extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"box Module\">\r\n        <h3 className=\"box__title Module__title\">{this.props.title}</h3>\r\n        <div className=\"Module__content\">{this.props.content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Module;","import React from 'react';\r\nimport openSocket from 'socket.io-client';\r\n\r\nclass Camera extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: null\r\n    }\r\n  }\r\n\r\n  getRandomRGBValue(min=0, max=255) {\r\n    return Math.floor(Math.random() * max) + min;\r\n  }\r\n  getRandomRGBImgArray(width, height) {\r\n    let rgbdata = [];\r\n    for(let i = 0; i < width; i++){\r\n      let row = [];\r\n      for(let j = 0; j < height; j++){\r\n        row.push([\r\n          this.getRandomRGBValue(0,255),\r\n          this.getRandomRGBValue(0,255),\r\n          this.getRandomRGBValue(0,255)\r\n        ]);\r\n      }\r\n      rgbdata.push(row);\r\n    }\r\n    return rgbdata;\r\n  }\r\n  renderRandomRGBImg(rgbarray) {\r\n    // paint rgbadata array on a canvas\r\n    const canvas = this.refs.canvas;\r\n    let ctx = canvas.getContext('2d');\r\n    for(let i = 0; i < rgbarray.length; i++){\r\n      for(let j = 0; j < rgbarray[0].length; j++){\t\r\n        ctx.fillStyle = 'rgba('+\r\n          rgbarray[i][j][0]+','+\r\n          rgbarray[i][j][1]+','+\r\n          rgbarray[i][j][2]+', 1)'; \r\n        ctx.fillRect(i,j,1,1);\r\n      }\r\n    }\r\n  }\r\n\r\n  animateRandomRGBImg() {\r\n    setInterval(() => {\r\n      this.renderRandomRGBImg(\r\n        this.getRandomRGBImgArray(\r\n          this.refs.canvas.width,\r\n          this.refs.canvas.height\r\n        )\r\n      );\r\n    }, 500);\r\n  }\r\n\r\n  renderImg(data) {\r\n    let src = 'data:image/jpg;base64, '+data;\r\n    this.setState({\r\n      img: src // set image state which will render it\r\n    });\r\n  }\r\n\r\n  fetchImgTxtBase64(url) {\r\n    fetch('b64.txt')\r\n    .then(response => response.text())\r\n    .then(data => {\r\n      this.renderImg(\r\n        data\r\n      );\r\n    });\r\n  }\r\n\r\n  handleClick() {\r\n    // generate random animation under the img\r\n    this.animateRandomRGBImg();\r\n\r\n    // fetch image converted to base64 from file\r\n    // this.fetchImgTxtBase64('b64.txt');\r\n\r\n    const io = openSocket('http://localhost:5000');\r\n  \r\n    io.on('connect', () => {\r\n      console.log('Socket connected');\r\n      io.send('Client connected');\r\n    });\r\n  \r\n    let i = 0;\r\n    io.on('message', data => {\r\n      console.log('Frame received: '+i);\r\n      this.renderImg(\r\n        data\r\n      );\r\n      i++\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Camera\" onClick={() => this.handleClick()}>\r\n        <img src={this.state.img} alt=\"ROV camera output\"/>\r\n        <canvas ref=\"canvas\" width=\"4\" height=\"3\"></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Camera;","import React from 'react';\r\n\r\nclass Terminal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"box Terminal\">\r\n        <h3 className=\"box__title Terminal__title\">{this.props.title}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Terminal;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.scss';\r\n\r\nimport Header from './components/Header.js';\r\nimport Module from './components/Module.js';\r\nimport Camera from './components/Camera.js';\r\nimport Terminal from './components/Terminal.js';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Header />\r\n        <main>\r\n          <div className=\"modules\">\r\n            <Module title=\"Module 1\" content=\"sample content sample content\" />\r\n            <Module title=\"Module 2\" content=\"sample content sample content\" />\r\n            <Module title=\"Module 3\" content=\"sample content sample content\" />\r\n            <Module title=\"Module 4\" content=\"sample content sample content\" />\r\n          </div>\r\n          <Camera />\r\n          <div className=\"modules\">\r\n            <Module title=\"Module 5\" content=\"sample content sample content\" />\r\n            <Module title=\"Module 6\" content=\"sample content sample content\" />\r\n            <Module title=\"Module 7\" content=\"sample content sample content\" />\r\n          </div>\r\n        </main>\r\n        <div className=\"terminals\">\r\n          <Terminal title=\"Terminal 1\" />\r\n          <Terminal title=\"Terminal 2\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}