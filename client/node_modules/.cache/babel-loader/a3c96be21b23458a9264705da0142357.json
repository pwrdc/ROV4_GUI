{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miko\\u0142aj\\\\OneDrive\\\\Projects\\\\ROV4_GUI\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.sass';\nimport openSocket from 'socket.io-client';\n\nclass Camera extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: null\n    };\n  }\n\n  renderImg() {\n    let canvas = /*#__PURE__*/React.createElement(\"canvas\", {\n      width: \"200\",\n      height: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    });\n    let ctx = canvas.getContext(\"2d\");\n\n    for (var i = 0; i < rgbdata.length; i++) {\n      for (var j = 0; j < rgbdata[0].length; j++) {\n        ctx.fillStyle = 'rgba(' + rgbdata[i][j][0] + ',' + rgbdata[i][j][1] + ',' + rgbdata[i][j][2] + ', 1)';\n        ctx.fillRect(j, i, 1, 1);\n      }\n    }\n  }\n\n  componentWillMount() {\n    fetch('frame.txt').then(response => response.text()).then(data => {\n      console.log(data);\n      this.setState({\n        // img: 'https://kopernik.kalisz.pl/wp-content/themes/koperniktheme/assets/rm-icons/kopernik_mq.png'\n        img: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.state.img);\n  }\n\n} // ========================================\n// const io = openSocket('http://localhost:3000');\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Camera, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Miko≈Çaj/OneDrive/Projects/ROV4_GUI/client/src/index.js"],"names":["React","ReactDOM","openSocket","Camera","Component","constructor","props","state","img","renderImg","canvas","ctx","getContext","i","rgbdata","length","j","fillStyle","fillRect","componentWillMount","fetch","then","response","text","data","console","log","setState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAGA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD;;AAEDC,EAAAA,SAAS,GAAG;AACV,QAAIC,MAAM,gBACR;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGA,QAAIC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEC,OAAO,CAACC,MAAxB,EAAgCF,CAAC,EAAjC,EAAoC;AAClC,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEF,OAAO,CAAC,CAAD,CAAP,CAAWC,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;AACrCL,QAAAA,GAAG,CAACM,SAAJ,GAAgB,UACdH,OAAO,CAACD,CAAD,CAAP,CAAWG,CAAX,EAAc,CAAd,CADc,GACG,GADH,GAEdF,OAAO,CAACD,CAAD,CAAP,CAAWG,CAAX,EAAc,CAAd,CAFc,GAEG,GAFH,GAGdF,OAAO,CAACD,CAAD,CAAP,CAAWG,CAAX,EAAc,CAAd,CAHc,GAGG,MAHnB;AAIAL,QAAAA,GAAG,CAACO,QAAJ,CAAcF,CAAd,EAAiBH,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD;AACF;AACF;;AAEDM,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,CAAC,WAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AACZ;AACAnB,QAAAA,GAAG,EAAEgB;AAFO,OAAd;AAID,KARD;AASD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,KAAKrB,KAAL,CAAWC,GAHf,CADF;AAOD;;AA5CkC,C,CA+CrC;AAEA;;;AAEAP,QAAQ,CAAC2B,MAAT,eACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.sass';\r\nimport openSocket from 'socket.io-client';\r\n\r\n\r\nclass Camera extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: null\r\n    }\r\n  }\r\n\r\n  renderImg() {\r\n    let canvas =\r\n      <canvas width=\"200\" height=\"100\"></canvas>\r\n\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for(var i=0; i< rgbdata.length; i++){\r\n      for(var j=0; j< rgbdata[0].length; j++){\t\r\n        ctx.fillStyle = 'rgba('+\r\n          rgbdata[i][j][0]+','+\r\n          rgbdata[i][j][1]+','+\r\n          rgbdata[i][j][2]+', 1)'; \r\n        ctx.fillRect( j, i, 1, 1 );\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch('frame.txt')\r\n    .then(response => response.text())\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({\r\n        // img: 'https://kopernik.kalisz.pl/wp-content/themes/koperniktheme/assets/rm-icons/kopernik_mq.png'\r\n        img: data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <img src={ this.state.img } alt=\"ROV camera output\"/> */}\r\n        {/* <canvas width=\"200\" height=\"100\"></canvas> */}\r\n        { this.state.img }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\n// const io = openSocket('http://localhost:3000');\r\n\r\nReactDOM.render(\r\n  <Camera />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}